#include "http/mime.h"

namespace lhs {
  namespace http {
    mime::mime() {
      mime_types["atom"].push_back(std::make_pair("application/atom+xml", APPLICATION_ATOM_XML));
      mime_types["pfr"].push_back(std::make_pair("application/font-tdpfr", APPLICATION_FONT_TDPFR));
      mime_types["stk"].push_back(std::make_pair("application/hyperstudio", APPLICATION_HYPERSTUDIO));
      mime_types["js"].push_back(std::make_pair("application/javascript", APPLICATION_JAVASCRIPT));
      mime_types["json"].push_back(std::make_pair("application/json", APPLICATION_JSON));
      mime_types["hqx"].push_back(std::make_pair("application/mac-binhex40", APPLICATION_MAC_BINHEX40));
      mime_types["mp4"].push_back(std::make_pair("application/mp4", APPLICATION_MP4));
      mime_types["mpg4"].push_back(std::make_pair("application/mp4", APPLICATION_MP4));
      mime_types["doc"].push_back(std::make_pair("application/msword", APPLICATION_MSWORD));
      mime_types["dot"].push_back(std::make_pair("application/msword", APPLICATION_MSWORD));
      mime_types["wrd"].push_back(std::make_pair("application/msword", APPLICATION_MSWORD));
      mime_types["bin"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["dms"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["lha"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["lzh"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["exe"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["class"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["ani"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["pgp"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["so"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["dll"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["dmg"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["dylib"].push_back(std::make_pair("application/octet-stream", APPLICATION_OCTET_STREAM));
      mime_types["oda"].push_back(std::make_pair("application/oda", APPLICATION_ODA));
      mime_types["ogx"].push_back(std::make_pair("application/ogg", APPLICATION_OGG));
      mime_types["pdf"].push_back(std::make_pair("application/pdf", APPLICATION_PDF));
      mime_types["sig"].push_back(std::make_pair("application/pgp-signature", APPLICATION_PGP_SIGNATURE));
      mime_types["p10"].push_back(std::make_pair("application/pkcs10", APPLICATION_PKCS10));
      mime_types["p7m"].push_back(std::make_pair("application/pkcs7-mime", APPLICATION_PKCS7_MIME));
      mime_types["p7c"].push_back(std::make_pair("application/pkcs7-mime", APPLICATION_PKCS7_MIME));
      mime_types["p7s"].push_back(std::make_pair("application/pkcs7-signature", APPLICATION_PKCS7_SIGNATURE));
      mime_types["cer"].push_back(std::make_pair("application/pkix-cert", APPLICATION_PKIX_CERT));
      mime_types["crl"].push_back(std::make_pair("application/pkix-crl", APPLICATION_PKIX_CRL));
      mime_types["pkipath"].push_back(std::make_pair("application/pkix-pkipath", APPLICATION_PKIX_PKIPATH));
      mime_types["pki"].push_back(std::make_pair("application/pkixcmp", APPLICATION_PKIXCMP));
      mime_types["ai"].push_back(std::make_pair("application/postscript", APPLICATION_POSTSCRIPT));
      mime_types["eps"].push_back(std::make_pair("application/postscript", APPLICATION_POSTSCRIPT));
      mime_types["ps"].push_back(std::make_pair("application/postscript", APPLICATION_POSTSCRIPT));
      mime_types["cw"].push_back(std::make_pair("application/prs.cww", APPLICATION_PRS_CWW));
      mime_types["cww"].push_back(std::make_pair("application/prs.cww", APPLICATION_PRS_CWW));
      mime_types["rnd"].push_back(std::make_pair("application/prs.nprend", APPLICATION_PRS_NPREND));
      mime_types["rct"].push_back(std::make_pair("application/prs.nprend", APPLICATION_PRS_NPREND));
      mime_types["rdf"].push_back(std::make_pair("application/rdf+xml", APPLICATION_RDF_XML));
      mime_types["rtf"].push_back(std::make_pair("application/rtf", APPLICATION_RTF));
      mime_types["sgml"].push_back(std::make_pair("application/sgml", APPLICATION_SGML));
      mime_types["soc"].push_back(std::make_pair("application/sgml-open-catalog", APPLICATION_SGML_OPEN_CATALOG));
      mime_types["siv"].push_back(std::make_pair("application/sieve", APPLICATION_SIEVE));
      mime_types["smi"].push_back(std::make_pair("application/smil+xml", APPLICATION_SMIL_XML));
      mime_types["smil"].push_back(std::make_pair("application/smil+xml", APPLICATION_SMIL_XML));
      mime_types["plb"].push_back(std::make_pair("application/vnd.3gpp.pic-bw-large", APPLICATION_VND_3GPP_PIC_BW_LARGE));
      mime_types["psb"].push_back(std::make_pair("application/vnd.3gpp.pic-bw-small", APPLICATION_VND_3GPP_PIC_BW_SMALL));
      mime_types["pvb"].push_back(std::make_pair("application/vnd.3gpp.pic-bw-var", APPLICATION_VND_3GPP_PIC_BW_VAR));
      mime_types["sms"].push_back(std::make_pair("application/vnd.3gpp.sms", APPLICATION_VND_3GPP_SMS));
      mime_types["kne"].push_back(std::make_pair("application/vnd.Kinar", APPLICATION_VND_KINAR));
      mime_types["knp"].push_back(std::make_pair("application/vnd.Kinar", APPLICATION_VND_KINAR));
      mime_types["sdf"].push_back(std::make_pair("application/vnd.Kinar", APPLICATION_VND_KINAR));
      mime_types["qxd"].push_back(std::make_pair("application/vnd.Quark.QuarkXPress", APPLICATION_VND_QUARK_QUARKXPRESS));
      mime_types["qxt"].push_back(std::make_pair("application/vnd.Quark.QuarkXPress", APPLICATION_VND_QUARK_QUARKXPRESS));
      mime_types["qwd"].push_back(std::make_pair("application/vnd.Quark.QuarkXPress", APPLICATION_VND_QUARK_QUARKXPRESS));
      mime_types["qwt"].push_back(std::make_pair("application/vnd.Quark.QuarkXPress", APPLICATION_VND_QUARK_QUARKXPRESS));
      mime_types["qxl"].push_back(std::make_pair("application/vnd.Quark.QuarkXPress", APPLICATION_VND_QUARK_QUARKXPRESS));
      mime_types["qxb"].push_back(std::make_pair("application/vnd.Quark.QuarkXPress", APPLICATION_VND_QUARK_QUARKXPRESS));
      mime_types["atc"].push_back(std::make_pair("application/vnd.acucorp", APPLICATION_VND_ACUCORP));
      mime_types["acutc"].push_back(std::make_pair("application/vnd.acucorp", APPLICATION_VND_ACUCORP));
      mime_types["xfdf"].push_back(std::make_pair("application/vnd.adobe.xfdf", APPLICATION_VND_ADOBE_XFDF));
      mime_types["ami"].push_back(std::make_pair("application/vnd.amiga.ami", APPLICATION_VND_AMIGA_AMI));
      mime_types["mpm"].push_back(std::make_pair("application/vnd.blueice.multipass", APPLICATION_VND_BLUEICE_MULTIPASS));
      mime_types["cdy"].push_back(std::make_pair("application/vnd.cinderella", APPLICATION_VND_CINDERELLA));
      mime_types["cmc"].push_back(std::make_pair("application/vnd.cosmocaller", APPLICATION_VND_COSMOCALLER));
      mime_types["wbs"].push_back(std::make_pair("application/vnd.criticaltools.wbs+xml", APPLICATION_VND_CRITICALTOOLS_WBS_XML));
      mime_types["curl"].push_back(std::make_pair("application/vnd.curl", APPLICATION_VND_CURL));
      mime_types["rdz"].push_back(std::make_pair("application/vnd.data-vision.rdz", APPLICATION_VND_DATA_VISION_RDZ));
      mime_types["dfac"].push_back(std::make_pair("application/vnd.dreamfactory", APPLICATION_VND_DREAMFACTORY));
      mime_types["frm"].push_back(std::make_pair("application/vnd.framemaker", APPLICATION_VND_FRAMEMAKER));
      mime_types["maker"].push_back(std::make_pair("application/vnd.framemaker", APPLICATION_VND_FRAMEMAKER));
      mime_types["frame"].push_back(std::make_pair("application/vnd.framemaker", APPLICATION_VND_FRAMEMAKER));
      mime_types["fm"].push_back(std::make_pair("application/vnd.framemaker", APPLICATION_VND_FRAMEMAKER));
      mime_types["fb"].push_back(std::make_pair("application/vnd.framemaker", APPLICATION_VND_FRAMEMAKER));
      mime_types["book"].push_back(std::make_pair("application/vnd.framemaker", APPLICATION_VND_FRAMEMAKER));
      mime_types["fbdoc"].push_back(std::make_pair("application/vnd.framemaker", APPLICATION_VND_FRAMEMAKER));
      mime_types["fsc"].push_back(std::make_pair("application/vnd.fsc.weblaunch", APPLICATION_VND_FSC_WEBLAUNCH));
      mime_types["txd"].push_back(std::make_pair("application/vnd.genomatix.tuxedo", APPLICATION_VND_GENOMATIX_TUXEDO));
      mime_types["kml"].push_back(std::make_pair("application/vnd.google-earth.kml+xml", APPLICATION_VND_GOOGLE_EARTH_KML_XML));
      mime_types["kmz"].push_back(std::make_pair("application/vnd.google-earth.kmz", APPLICATION_VND_GOOGLE_EARTH_KMZ));
      mime_types["hbci"].push_back(std::make_pair("application/vnd.hbci", APPLICATION_VND_HBCI));
      mime_types["hbc"].push_back(std::make_pair("application/vnd.hbci", APPLICATION_VND_HBCI));
      mime_types["kom"].push_back(std::make_pair("application/vnd.hbci", APPLICATION_VND_HBCI));
      mime_types["upa"].push_back(std::make_pair("application/vnd.hbci", APPLICATION_VND_HBCI));
      mime_types["pkd"].push_back(std::make_pair("application/vnd.hbci", APPLICATION_VND_HBCI));
      mime_types["bpd"].push_back(std::make_pair("application/vnd.hbci", APPLICATION_VND_HBCI));
      mime_types["les"].push_back(std::make_pair("application/vnd.hhe.lesson-player", APPLICATION_VND_HHE_LESSON_PLAYER));
      mime_types["plt"].push_back(std::make_pair("application/vnd.hp-HPGL", APPLICATION_VND_HP_HPGL));
      mime_types["hpgl"].push_back(std::make_pair("application/vnd.hp-HPGL", APPLICATION_VND_HP_HPGL));
      mime_types["emm"].push_back(std::make_pair("application/vnd.ibm.electronic-media", APPLICATION_VND_IBM_ELECTRONIC_MEDIA));
      mime_types["irm"].push_back(std::make_pair("application/vnd.ibm.rights-management", APPLICATION_VND_IBM_RIGHTS_MANAGEMENT));
      mime_types["sc"].push_back(std::make_pair("application/vnd.ibm.secure-container", APPLICATION_VND_IBM_SECURE_CONTAINER));
      mime_types["rcprofile"].push_back(std::make_pair("application/vnd.ipunplugged.rcprofile", APPLICATION_VND_IPUNPLUGGED_RCPROFILE));
      mime_types["irp"].push_back(std::make_pair("application/vnd.irepository.package+xml", APPLICATION_VND_IREPOSITORY_PACKAGE_XML));
      mime_types["jisp"].push_back(std::make_pair("application/vnd.jisp", APPLICATION_VND_JISP));
      mime_types["karbon"].push_back(std::make_pair("application/vnd.kde.karbon", APPLICATION_VND_KDE_KARBON));
      mime_types["chrt"].push_back(std::make_pair("application/vnd.kde.kchart", APPLICATION_VND_KDE_KCHART));
      mime_types["kfo"].push_back(std::make_pair("application/vnd.kde.kformula", APPLICATION_VND_KDE_KFORMULA));
      mime_types["flw"].push_back(std::make_pair("application/vnd.kde.kivio", APPLICATION_VND_KDE_KIVIO));
      mime_types["kon"].push_back(std::make_pair("application/vnd.kde.kontour", APPLICATION_VND_KDE_KONTOUR));
      mime_types["kpr"].push_back(std::make_pair("application/vnd.kde.kpresenter", APPLICATION_VND_KDE_KPRESENTER));
      mime_types["kpt"].push_back(std::make_pair("application/vnd.kde.kpresenter", APPLICATION_VND_KDE_KPRESENTER));
      mime_types["ksp"].push_back(std::make_pair("application/vnd.kde.kspread", APPLICATION_VND_KDE_KSPREAD));
      mime_types["kwd"].push_back(std::make_pair("application/vnd.kde.kword", APPLICATION_VND_KDE_KWORD));
      mime_types["kwt"].push_back(std::make_pair("application/vnd.kde.kword", APPLICATION_VND_KDE_KWORD));
      mime_types["htke"].push_back(std::make_pair("application/vnd.kenameaapp", APPLICATION_VND_KENAMEAAPP));
      mime_types["kia"].push_back(std::make_pair("application/vnd.kidspiration", APPLICATION_VND_KIDSPIRATION));
      mime_types["lbd"].push_back(std::make_pair("application/vnd.llamagraphics.life-balance.desktop", APPLICATION_VND_LLAMAGRAPHICS_LIFE_BALANCE_DESKTOP));
      mime_types["lbe"].push_back(std::make_pair("application/vnd.llamagraphics.life-balance.exchange+xml", APPLICATION_VND_LLAMAGRAPHICS_LIFE_BALANCE_EXCHANGE_XML));
      mime_types["wks"].push_back(std::make_pair("application/vnd.lotus-1-2-3", APPLICATION_VND_LOTUS_1_2_3));
      mime_types["123"].push_back(std::make_pair("application/vnd.lotus-1-2-3", APPLICATION_VND_LOTUS_1_2_3));
      mime_types["mcd"].push_back(std::make_pair("application/vnd.mcd", APPLICATION_VND_MCD));
      mime_types["mfm"].push_back(std::make_pair("application/vnd.mfmp", APPLICATION_VND_MFMP));
      mime_types["flo"].push_back(std::make_pair("application/vnd.micrografx.flo", APPLICATION_VND_MICROGRAFX_FLO));
      mime_types["igx"].push_back(std::make_pair("application/vnd.micrografx.igx", APPLICATION_VND_MICROGRAFX_IGX));
      mime_types["mif"].push_back(std::make_pair("application/vnd.mif", APPLICATION_VND_MIF));
      mime_types["mpn"].push_back(std::make_pair("application/vnd.mophun.application", APPLICATION_VND_MOPHUN_APPLICATION));
      mime_types["mpc"].push_back(std::make_pair("application/vnd.mophun.certificate", APPLICATION_VND_MOPHUN_CERTIFICATE));
      mime_types["xul"].push_back(std::make_pair("application/vnd.mozilla.xul+xml", APPLICATION_VND_MOZILLA_XUL_XML));
      mime_types["cil"].push_back(std::make_pair("application/vnd.ms-artgalry", APPLICATION_VND_MS_ARTGALRY));
      mime_types["asf"].push_back(std::make_pair("application/vnd.ms-asf", APPLICATION_VND_MS_ASF));
      mime_types["cab"].push_back(std::make_pair("application/vnd.ms-cab-compressed", APPLICATION_VND_MS_CAB_COMPRESSED));
      mime_types["xls"].push_back(std::make_pair("application/vnd.ms-excel", APPLICATION_VND_MS_EXCEL));
      mime_types["xlt"].push_back(std::make_pair("application/vnd.ms-excel", APPLICATION_VND_MS_EXCEL));
      mime_types["xslb"].push_back(std::make_pair("application/vnd.ms-excel.sheet.binary.macroEnabled.12", APPLICATION_VND_MS_EXCEL_SHEET_BINARY_MACROENABLED_12));
      mime_types["xslm"].push_back(std::make_pair("application/vnd.ms-excel.sheet.macroEnabled.12", APPLICATION_VND_MS_EXCEL_SHEET_MACROENABLED_12));
      mime_types["lrm"].push_back(std::make_pair("application/vnd.ms-lrm", APPLICATION_VND_MS_LRM));
      mime_types["ppt"].push_back(std::make_pair("application/vnd.ms-powerpoint", APPLICATION_VND_MS_POWERPOINT));
      mime_types["pps"].push_back(std::make_pair("application/vnd.ms-powerpoint", APPLICATION_VND_MS_POWERPOINT));
      mime_types["pot"].push_back(std::make_pair("application/vnd.ms-powerpoint", APPLICATION_VND_MS_POWERPOINT));
      mime_types["pptm"].push_back(std::make_pair("application/vnd.ms-powerpoint.slide.macroEnabled.12", APPLICATION_VND_MS_POWERPOINT_SLIDE_MACROENABLED_12));
      mime_types["potm"].push_back(std::make_pair("application/vnd.ms-powerpoint.template.macroEnabled.12", APPLICATION_VND_MS_POWERPOINT_TEMPLATE_MACROENABLED_12));
      mime_types["mpp"].push_back(std::make_pair("application/vnd.ms-project", APPLICATION_VND_MS_PROJECT));
      mime_types["wpl"].push_back(std::make_pair("application/vnd.ms-wpl", APPLICATION_VND_MS_WPL));
      mime_types["xps"].push_back(std::make_pair("application/vnd.ms-xpsdocument", APPLICATION_VND_MS_XPSDOCUMENT));
      mime_types["mseq"].push_back(std::make_pair("application/vnd.mseq", APPLICATION_VND_MSEQ));
      mime_types["ent"].push_back(std::make_pair("application/vnd.nervana", APPLICATION_VND_NERVANA));
      mime_types["entity"].push_back(std::make_pair("application/vnd.nervana", APPLICATION_VND_NERVANA));
      mime_types["req"].push_back(std::make_pair("application/vnd.nervana", APPLICATION_VND_NERVANA));
      mime_types["request"].push_back(std::make_pair("application/vnd.nervana", APPLICATION_VND_NERVANA));
      mime_types["bkm"].push_back(std::make_pair("application/vnd.nervana", APPLICATION_VND_NERVANA));
      mime_types["kcm"].push_back(std::make_pair("application/vnd.nervana", APPLICATION_VND_NERVANA));
      mime_types["rpst"].push_back(std::make_pair("application/vnd.nokia.radio-preset", APPLICATION_VND_NOKIA_RADIO_PRESET));
      mime_types["rpss"].push_back(std::make_pair("application/vnd.nokia.radio-presets", APPLICATION_VND_NOKIA_RADIO_PRESETS));
      mime_types["odc"].push_back(std::make_pair("application/vnd.oasis.opendocument.chart", APPLICATION_VND_OASIS_OPENDOCUMENT_CHART));
      mime_types["odc"].push_back(std::make_pair("application/vnd.oasis.opendocument.chart-template", APPLICATION_VND_OASIS_OPENDOCUMENT_CHART_TEMPLATE));
      mime_types["odb"].push_back(std::make_pair("application/vnd.oasis.opendocument.database", APPLICATION_VND_OASIS_OPENDOCUMENT_DATABASE));
      mime_types["odf"].push_back(std::make_pair("application/vnd.oasis.opendocument.formula", APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA));
      mime_types["odf"].push_back(std::make_pair("application/vnd.oasis.opendocument.formula-template", APPLICATION_VND_OASIS_OPENDOCUMENT_FORMULA_TEMPLATE));
      mime_types["odg"].push_back(std::make_pair("application/vnd.oasis.opendocument.graphics", APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS));
      mime_types["otg"].push_back(std::make_pair("application/vnd.oasis.opendocument.graphics-template", APPLICATION_VND_OASIS_OPENDOCUMENT_GRAPHICS_TEMPLATE));
      mime_types["odi"].push_back(std::make_pair("application/vnd.oasis.opendocument.image", APPLICATION_VND_OASIS_OPENDOCUMENT_IMAGE));
      mime_types["odi"].push_back(std::make_pair("application/vnd.oasis.opendocument.image-template", APPLICATION_VND_OASIS_OPENDOCUMENT_IMAGE_TEMPLATE));
      mime_types["odp"].push_back(std::make_pair("application/vnd.oasis.opendocument.presentation", APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION));
      mime_types["otp"].push_back(std::make_pair("application/vnd.oasis.opendocument.presentation-template", APPLICATION_VND_OASIS_OPENDOCUMENT_PRESENTATION_TEMPLATE));
      mime_types["ods"].push_back(std::make_pair("application/vnd.oasis.opendocument.spreadsheet", APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET));
      mime_types["ots"].push_back(std::make_pair("application/vnd.oasis.opendocument.spreadsheet-template", APPLICATION_VND_OASIS_OPENDOCUMENT_SPREADSHEET_TEMPLATE));
      mime_types["odt"].push_back(std::make_pair("application/vnd.oasis.opendocument.text", APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT));
      mime_types["odm"].push_back(std::make_pair("application/vnd.oasis.opendocument.text-master", APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_MASTER));
      mime_types["ott"].push_back(std::make_pair("application/vnd.oasis.opendocument.text-template", APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_TEMPLATE));
      mime_types["oth"].push_back(std::make_pair("application/vnd.oasis.opendocument.text-web", APPLICATION_VND_OASIS_OPENDOCUMENT_TEXT_WEB));
      mime_types["pptx"].push_back(std::make_pair("application/vnd.openxmlformats-officedocument.presentationml.presentation", APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_PRESENTATION));
      mime_types["ppsx"].push_back(std::make_pair("application/vnd.openxmlformats-officedocument.presentationml.slideshow", APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_SLIDESHOW));
      mime_types["potx"].push_back(std::make_pair("application/vnd.openxmlformats-officedocument.presentationml.template", APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_PRESENTATIONML_TEMPLATE));
      mime_types["xlsx"].push_back(std::make_pair("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_SPREADSHEETML_SHEET));
      mime_types["docx"].push_back(std::make_pair("application/vnd.openxmlformats-officedocument.wordprocessingml.document", APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_DOCUMENT));
      mime_types["dotx"].push_back(std::make_pair("application/vnd.openxmlformats-officedocument.wordprocessingml.template", APPLICATION_VND_OPENXMLFORMATS_OFFICEDOCUMENT_WORDPROCESSINGML_TEMPLATE));
      mime_types["prc"].push_back(std::make_pair("application/vnd.palm", APPLICATION_VND_PALM));
      mime_types["pdb"].push_back(std::make_pair("application/vnd.palm", APPLICATION_VND_PALM));
      mime_types["pqa"].push_back(std::make_pair("application/vnd.palm", APPLICATION_VND_PALM));
      mime_types["oprc"].push_back(std::make_pair("application/vnd.palm", APPLICATION_VND_PALM));
      mime_types["efif"].push_back(std::make_pair("application/vnd.picsel", APPLICATION_VND_PICSEL));
      mime_types["pti"].push_back(std::make_pair("application/vnd.pvi.ptid1", APPLICATION_VND_PVI_PTID1));
      mime_types["ptid"].push_back(std::make_pair("application/vnd.pvi.ptid1", APPLICATION_VND_PVI_PTID1));
      mime_types["sdoc"].push_back(std::make_pair("application/vnd.sealed.doc", APPLICATION_VND_SEALED_DOC));
      mime_types["sdo"].push_back(std::make_pair("application/vnd.sealed.doc", APPLICATION_VND_SEALED_DOC));
      mime_types["s1w"].push_back(std::make_pair("application/vnd.sealed.doc", APPLICATION_VND_SEALED_DOC));
      mime_types["seml"].push_back(std::make_pair("application/vnd.sealed.eml", APPLICATION_VND_SEALED_EML));
      mime_types["sem"].push_back(std::make_pair("application/vnd.sealed.eml", APPLICATION_VND_SEALED_EML));
      mime_types["smht"].push_back(std::make_pair("application/vnd.sealed.mht", APPLICATION_VND_SEALED_MHT));
      mime_types["smh"].push_back(std::make_pair("application/vnd.sealed.mht", APPLICATION_VND_SEALED_MHT));
      mime_types["sppt"].push_back(std::make_pair("application/vnd.sealed.ppt", APPLICATION_VND_SEALED_PPT));
      mime_types["spp"].push_back(std::make_pair("application/vnd.sealed.ppt", APPLICATION_VND_SEALED_PPT));
      mime_types["s1p"].push_back(std::make_pair("application/vnd.sealed.ppt", APPLICATION_VND_SEALED_PPT));
      mime_types["sxls"].push_back(std::make_pair("application/vnd.sealed.xls", APPLICATION_VND_SEALED_XLS));
      mime_types["sxl"].push_back(std::make_pair("application/vnd.sealed.xls", APPLICATION_VND_SEALED_XLS));
      mime_types["s1e"].push_back(std::make_pair("application/vnd.sealed.xls", APPLICATION_VND_SEALED_XLS));
      mime_types["stml"].push_back(std::make_pair("application/vnd.sealedmedia.softseal.html", APPLICATION_VND_SEALEDMEDIA_SOFTSEAL_HTML));
      mime_types["stm"].push_back(std::make_pair("application/vnd.sealedmedia.softseal.html", APPLICATION_VND_SEALEDMEDIA_SOFTSEAL_HTML));
      mime_types["s1h"].push_back(std::make_pair("application/vnd.sealedmedia.softseal.html", APPLICATION_VND_SEALEDMEDIA_SOFTSEAL_HTML));
      mime_types["spdf"].push_back(std::make_pair("application/vnd.sealedmedia.softseal.pdf", APPLICATION_VND_SEALEDMEDIA_SOFTSEAL_PDF));
      mime_types["spd"].push_back(std::make_pair("application/vnd.sealedmedia.softseal.pdf", APPLICATION_VND_SEALEDMEDIA_SOFTSEAL_PDF));
      mime_types["s1a"].push_back(std::make_pair("application/vnd.sealedmedia.softseal.pdf", APPLICATION_VND_SEALEDMEDIA_SOFTSEAL_PDF));
      mime_types["see"].push_back(std::make_pair("application/vnd.seemail", APPLICATION_VND_SEEMAIL));
      mime_types["mmf"].push_back(std::make_pair("application/vnd.smaf", APPLICATION_VND_SMAF));
      mime_types["sus"].push_back(std::make_pair("application/vnd.sus-calendar", APPLICATION_VND_SUS_CALENDAR));
      mime_types["susp"].push_back(std::make_pair("application/vnd.sus-calendar", APPLICATION_VND_SUS_CALENDAR));
      mime_types["vsc"].push_back(std::make_pair("application/vnd.vidsoft.vidconference", APPLICATION_VND_VIDSOFT_VIDCONFERENCE));
      mime_types["vsd"].push_back(std::make_pair("application/vnd.visio", APPLICATION_VND_VISIO));
      mime_types["vst"].push_back(std::make_pair("application/vnd.visio", APPLICATION_VND_VISIO));
      mime_types["vsw"].push_back(std::make_pair("application/vnd.visio", APPLICATION_VND_VISIO));
      mime_types["vss"].push_back(std::make_pair("application/vnd.visio", APPLICATION_VND_VISIO));
      mime_types["vis"].push_back(std::make_pair("application/vnd.visionary", APPLICATION_VND_VISIONARY));
      mime_types["sic"].push_back(std::make_pair("application/vnd.wap.sic", APPLICATION_VND_WAP_SIC));
      mime_types["slc"].push_back(std::make_pair("application/vnd.wap.slc", APPLICATION_VND_WAP_SLC));
      mime_types["wbxml"].push_back(std::make_pair("application/vnd.wap.wbxml", APPLICATION_VND_WAP_WBXML));
      mime_types["wmlc"].push_back(std::make_pair("application/vnd.wap.wmlc", APPLICATION_VND_WAP_WMLC));
      mime_types["wmlsc"].push_back(std::make_pair("application/vnd.wap.wmlscriptc", APPLICATION_VND_WAP_WMLSCRIPTC));
      mime_types["wtb"].push_back(std::make_pair("application/vnd.webturbo", APPLICATION_VND_WEBTURBO));
      mime_types["wpd"].push_back(std::make_pair("application/vnd.wordperfect", APPLICATION_VND_WORDPERFECT));
      mime_types["wqd"].push_back(std::make_pair("application/vnd.wqd", APPLICATION_VND_WQD));
      mime_types["wv"].push_back(std::make_pair("application/vnd.wv.csp+wbxml", APPLICATION_VND_WV_CSP_WBXML));
      mime_types["hvd"].push_back(std::make_pair("application/vnd.yamaha.hv-dic", APPLICATION_VND_YAMAHA_HV_DIC));
      mime_types["hvs"].push_back(std::make_pair("application/vnd.yamaha.hv-script", APPLICATION_VND_YAMAHA_HV_SCRIPT));
      mime_types["hvp"].push_back(std::make_pair("application/vnd.yamaha.hv-voice", APPLICATION_VND_YAMAHA_HV_VOICE));
      mime_types["saf"].push_back(std::make_pair("application/vnd.yamaha.smaf-audio", APPLICATION_VND_YAMAHA_SMAF_AUDIO));
      mime_types["spf"].push_back(std::make_pair("application/vnd.yamaha.smaf-phrase", APPLICATION_VND_YAMAHA_SMAF_PHRASE));
      mime_types["wif"].push_back(std::make_pair("application/watcherinfo+xml", APPLICATION_WATCHERINFO_XML));
      mime_types["wp5"].push_back(std::make_pair("application/wordperfect5.1", APPLICATION_WORDPERFECT5_1));
      mime_types["wp"].push_back(std::make_pair("application/wordperfect5.1", APPLICATION_WORDPERFECT5_1));
      mime_types["xhtml"].push_back(std::make_pair("application/xhtml+xml", APPLICATION_XHTML_XML));
      mime_types["xml"].push_back(std::make_pair("application/xml", APPLICATION_XML));
      mime_types["xsl"].push_back(std::make_pair("application/xml", APPLICATION_XML));
      mime_types["dtd"].push_back(std::make_pair("application/xml-dtd", APPLICATION_XML_DTD));
      mime_types["xslt"].push_back(std::make_pair("application/xslt+xml", APPLICATION_XSLT_XML));
      mime_types["zip"].push_back(std::make_pair("application/zip", APPLICATION_ZIP));
      mime_types["bin"].push_back(std::make_pair("application/x-mac", APPLICATION_X_MAC));
      mime_types["bin"].push_back(std::make_pair("application/x-macbase64", APPLICATION_X_MACBASE64));
      mime_types["xls"].push_back(std::make_pair("application/excel", APPLICATION_EXCEL));
      mime_types["xlt"].push_back(std::make_pair("application/excel", APPLICATION_EXCEL));
      mime_types["nc"].push_back(std::make_pair("application/netcdf", APPLICATION_NETCDF));
      mime_types["cdf"].push_back(std::make_pair("application/netcdf", APPLICATION_NETCDF));
      mime_types["ppt"].push_back(std::make_pair("application/powerpoint", APPLICATION_POWERPOINT));
      mime_types["pps"].push_back(std::make_pair("application/powerpoint", APPLICATION_POWERPOINT));
      mime_types["pot"].push_back(std::make_pair("application/powerpoint", APPLICATION_POWERPOINT));
      mime_types["sdc"].push_back(std::make_pair("application/vnd.stardivision.calc", APPLICATION_VND_STARDIVISION_CALC));
      mime_types["sds"].push_back(std::make_pair("application/vnd.stardivision.chart", APPLICATION_VND_STARDIVISION_CHART));
      mime_types["sda"].push_back(std::make_pair("application/vnd.stardivision.draw", APPLICATION_VND_STARDIVISION_DRAW));
      mime_types["sdd"].push_back(std::make_pair("application/vnd.stardivision.impress", APPLICATION_VND_STARDIVISION_IMPRESS));
      mime_types["sdf"].push_back(std::make_pair("application/vnd.stardivision.math", APPLICATION_VND_STARDIVISION_MATH));
      mime_types["sdw"].push_back(std::make_pair("application/vnd.stardivision.writer", APPLICATION_VND_STARDIVISION_WRITER));
      mime_types["sgl"].push_back(std::make_pair("application/vnd.stardivision.writer-global", APPLICATION_VND_STARDIVISION_WRITER_GLOBAL));
      mime_types["sxc"].push_back(std::make_pair("application/vnd.sun.xml.calc", APPLICATION_VND_SUN_XML_CALC));
      mime_types["stc"].push_back(std::make_pair("application/vnd.sun.xml.calc.template", APPLICATION_VND_SUN_XML_CALC_TEMPLATE));
      mime_types["sxd"].push_back(std::make_pair("application/vnd.sun.xml.draw", APPLICATION_VND_SUN_XML_DRAW));
      mime_types["std"].push_back(std::make_pair("application/vnd.sun.xml.draw.template", APPLICATION_VND_SUN_XML_DRAW_TEMPLATE));
      mime_types["sxi"].push_back(std::make_pair("application/vnd.sun.xml.impress", APPLICATION_VND_SUN_XML_IMPRESS));
      mime_types["sti"].push_back(std::make_pair("application/vnd.sun.xml.impress.template", APPLICATION_VND_SUN_XML_IMPRESS_TEMPLATE));
      mime_types["sxm"].push_back(std::make_pair("application/vnd.sun.xml.math", APPLICATION_VND_SUN_XML_MATH));
      mime_types["sxw"].push_back(std::make_pair("application/vnd.sun.xml.writer", APPLICATION_VND_SUN_XML_WRITER));
      mime_types["sxg"].push_back(std::make_pair("application/vnd.sun.xml.writer.global", APPLICATION_VND_SUN_XML_WRITER_GLOBAL));
      mime_types["stw"].push_back(std::make_pair("application/vnd.sun.xml.writer.template", APPLICATION_VND_SUN_XML_WRITER_TEMPLATE));
      mime_types["doc"].push_back(std::make_pair("application/word", APPLICATION_WORD));
      mime_types["dot"].push_back(std::make_pair("application/word", APPLICATION_WORD));
      mime_types["bck"].push_back(std::make_pair("application/x-VMSBACKUP", APPLICATION_X_VMSBACKUP));
      mime_types["wz"].push_back(std::make_pair("application/x-Wingz", APPLICATION_X_WINGZ));
      mime_types["bcpio"].push_back(std::make_pair("application/x-bcpio", APPLICATION_X_BCPIO));
      mime_types["bleep"].push_back(std::make_pair("application/x-bleeper", APPLICATION_X_BLEEPER));
      mime_types["bz2"].push_back(std::make_pair("application/x-bzip2", APPLICATION_X_BZIP2));
      mime_types["vcd"].push_back(std::make_pair("application/x-cdlink", APPLICATION_X_CDLINK));
      mime_types["pgn"].push_back(std::make_pair("application/x-chess-pgn", APPLICATION_X_CHESS_PGN));
      mime_types["z"].push_back(std::make_pair("application/x-compressed", APPLICATION_X_COMPRESSED));
      mime_types["Z"].push_back(std::make_pair("application/x-compressed", APPLICATION_X_COMPRESSED));
      mime_types["cpio"].push_back(std::make_pair("application/x-cpio", APPLICATION_X_CPIO));
      mime_types["csh"].push_back(std::make_pair("application/x-csh", APPLICATION_X_CSH));
      mime_types["csm"].push_back(std::make_pair("application/x-cu-seeme", APPLICATION_X_CU_SEEME));
      mime_types["cu"].push_back(std::make_pair("application/x-cu-seeme", APPLICATION_X_CU_SEEME));
      mime_types["deb"].push_back(std::make_pair("application/x-debian-package", APPLICATION_X_DEBIAN_PACKAGE));
      mime_types["dcr"].push_back(std::make_pair("application/x-director", APPLICATION_X_DIRECTOR));
      mime_types["dir"].push_back(std::make_pair("application/x-director", APPLICATION_X_DIRECTOR));
      mime_types["dxr"].push_back(std::make_pair("application/x-director", APPLICATION_X_DIRECTOR));
      mime_types["dvi"].push_back(std::make_pair("application/x-dvi", APPLICATION_X_DVI));
      mime_types["spl"].push_back(std::make_pair("application/x-futuresplash", APPLICATION_X_FUTURESPLASH));
      mime_types["gtar"].push_back(std::make_pair("application/x-gtar", APPLICATION_X_GTAR));
      mime_types["tgz"].push_back(std::make_pair("application/x-gtar", APPLICATION_X_GTAR));
      mime_types["tbz2"].push_back(std::make_pair("application/x-gtar", APPLICATION_X_GTAR));
      mime_types["tbz"].push_back(std::make_pair("application/x-gtar", APPLICATION_X_GTAR));
      mime_types["gz"].push_back(std::make_pair("application/x-gzip", APPLICATION_X_GZIP));
      mime_types["hdf"].push_back(std::make_pair("application/x-hdf", APPLICATION_X_HDF));
      mime_types["hep"].push_back(std::make_pair("application/x-hep", APPLICATION_X_HEP));
      mime_types["rhtml"].push_back(std::make_pair("application/x-html+ruby", APPLICATION_X_HTML_RUBY));
      mime_types["phtml"].push_back(std::make_pair("application/x-httpd-php", APPLICATION_X_HTTPD_PHP));
      mime_types["pht"].push_back(std::make_pair("application/x-httpd-php", APPLICATION_X_HTTPD_PHP));
      mime_types["php"].push_back(std::make_pair("application/x-httpd-php", APPLICATION_X_HTTPD_PHP));
      mime_types["ica"].push_back(std::make_pair("application/x-ica", APPLICATION_X_ICA));
      mime_types["imagemap"].push_back(std::make_pair("application/x-imagemap", APPLICATION_X_IMAGEMAP));
      mime_types["imap"].push_back(std::make_pair("application/x-imagemap", APPLICATION_X_IMAGEMAP));
      mime_types["jar"].push_back(std::make_pair("application/x-java-archive", APPLICATION_X_JAVA_ARCHIVE));
      mime_types["jnlp"].push_back(std::make_pair("application/x-java-jnlp-file", APPLICATION_X_JAVA_JNLP_FILE));
      mime_types["ser"].push_back(std::make_pair("application/x-java-serialized-object", APPLICATION_X_JAVA_SERIALIZED_OBJECT));
      mime_types["class"].push_back(std::make_pair("application/x-java-vm", APPLICATION_X_JAVA_VM));
      mime_types["skp"].push_back(std::make_pair("application/x-koan", APPLICATION_X_KOAN));
      mime_types["skd"].push_back(std::make_pair("application/x-koan", APPLICATION_X_KOAN));
      mime_types["skt"].push_back(std::make_pair("application/x-koan", APPLICATION_X_KOAN));
      mime_types["skm"].push_back(std::make_pair("application/x-koan", APPLICATION_X_KOAN));
      mime_types["ltx"].push_back(std::make_pair("application/x-latex", APPLICATION_X_LATEX));
      mime_types["latex"].push_back(std::make_pair("application/x-latex", APPLICATION_X_LATEX));
      mime_types["cpt"].push_back(std::make_pair("application/x-mac-compactpro", APPLICATION_X_MAC_COMPACTPRO));
      mime_types["frm"].push_back(std::make_pair("application/x-maker", APPLICATION_X_MAKER));
      mime_types["maker"].push_back(std::make_pair("application/x-maker", APPLICATION_X_MAKER));
      mime_types["frame"].push_back(std::make_pair("application/x-maker", APPLICATION_X_MAKER));
      mime_types["fm"].push_back(std::make_pair("application/x-maker", APPLICATION_X_MAKER));
      mime_types["fb"].push_back(std::make_pair("application/x-maker", APPLICATION_X_MAKER));
      mime_types["book"].push_back(std::make_pair("application/x-maker", APPLICATION_X_MAKER));
      mime_types["fbdoc"].push_back(std::make_pair("application/x-maker", APPLICATION_X_MAKER));
      mime_types["mif"].push_back(std::make_pair("application/x-mif", APPLICATION_X_MIF));
      mime_types["mda"].push_back(std::make_pair("application/x-msaccess", APPLICATION_X_MSACCESS));
      mime_types["mdb"].push_back(std::make_pair("application/x-msaccess", APPLICATION_X_MSACCESS));
      mime_types["mde"].push_back(std::make_pair("application/x-msaccess", APPLICATION_X_MSACCESS));
      mime_types["mdf"].push_back(std::make_pair("application/x-msaccess", APPLICATION_X_MSACCESS));
      mime_types["cmd"].push_back(std::make_pair("application/x-msdos-program", APPLICATION_X_MSDOS_PROGRAM));
      mime_types["bat"].push_back(std::make_pair("application/x-msdos-program", APPLICATION_X_MSDOS_PROGRAM));
      mime_types["com"].push_back(std::make_pair("application/x-msdos-program", APPLICATION_X_MSDOS_PROGRAM));
      mime_types["exe"].push_back(std::make_pair("application/x-msdos-program", APPLICATION_X_MSDOS_PROGRAM));
      mime_types["exe"].push_back(std::make_pair("application/x-msdownload", APPLICATION_X_MSDOWNLOAD));
      mime_types["com"].push_back(std::make_pair("application/x-msdownload", APPLICATION_X_MSDOWNLOAD));
      mime_types["nc"].push_back(std::make_pair("application/x-netcdf", APPLICATION_X_NETCDF));
      mime_types["cdf"].push_back(std::make_pair("application/x-netcdf", APPLICATION_X_NETCDF));
      mime_types["pac"].push_back(std::make_pair("application/x-ns-proxy-autoconfig", APPLICATION_X_NS_PROXY_AUTOCONFIG));
      mime_types["pm"].push_back(std::make_pair("application/x-pagemaker", APPLICATION_X_PAGEMAKER));
      mime_types["pm5"].push_back(std::make_pair("application/x-pagemaker", APPLICATION_X_PAGEMAKER));
      mime_types["pt5"].push_back(std::make_pair("application/x-pagemaker", APPLICATION_X_PAGEMAKER));
      mime_types["pl"].push_back(std::make_pair("application/x-perl", APPLICATION_X_PERL));
      mime_types["pm"].push_back(std::make_pair("application/x-perl", APPLICATION_X_PERL));
      mime_types["py"].push_back(std::make_pair("application/x-python", APPLICATION_X_PYTHON));
      mime_types["qtl"].push_back(std::make_pair("application/x-quicktimeplayer", APPLICATION_X_QUICKTIMEPLAYER));
      mime_types["rar"].push_back(std::make_pair("application/x-rar-compressed", APPLICATION_X_RAR_COMPRESSED));
      mime_types["rb"].push_back(std::make_pair("application/x-ruby", APPLICATION_X_RUBY));
      mime_types["rbw"].push_back(std::make_pair("application/x-ruby", APPLICATION_X_RUBY));
      mime_types["sh"].push_back(std::make_pair("application/x-sh", APPLICATION_X_SH));
      mime_types["shar"].push_back(std::make_pair("application/x-shar", APPLICATION_X_SHAR));
      mime_types["swf"].push_back(std::make_pair("application/x-shockwave-flash", APPLICATION_X_SHOCKWAVE_FLASH));
      mime_types["sav"].push_back(std::make_pair("application/x-spss", APPLICATION_X_SPSS));
      mime_types["sbs"].push_back(std::make_pair("application/x-spss", APPLICATION_X_SPSS));
      mime_types["sps"].push_back(std::make_pair("application/x-spss", APPLICATION_X_SPSS));
      mime_types["spo"].push_back(std::make_pair("application/x-spss", APPLICATION_X_SPSS));
      mime_types["spp"].push_back(std::make_pair("application/x-spss", APPLICATION_X_SPSS));
      mime_types["sit"].push_back(std::make_pair("application/x-stuffit", APPLICATION_X_STUFFIT));
      mime_types["sv4cpio"].push_back(std::make_pair("application/x-sv4cpio", APPLICATION_X_SV4CPIO));
      mime_types["sv4crc"].push_back(std::make_pair("application/x-sv4crc", APPLICATION_X_SV4CRC));
      mime_types["tar"].push_back(std::make_pair("application/x-tar", APPLICATION_X_TAR));
      mime_types["tcl"].push_back(std::make_pair("application/x-tcl", APPLICATION_X_TCL));
      mime_types["tex"].push_back(std::make_pair("application/x-tex", APPLICATION_X_TEX));
      mime_types["texinfo"].push_back(std::make_pair("application/x-texinfo", APPLICATION_X_TEXINFO));
      mime_types["texi"].push_back(std::make_pair("application/x-texinfo", APPLICATION_X_TEXINFO));
      mime_types["tbk"].push_back(std::make_pair("application/x-toolbook", APPLICATION_X_TOOLBOOK));
      mime_types["man"].push_back(std::make_pair("application/x-troff-man", APPLICATION_X_TROFF_MAN));
      mime_types["me"].push_back(std::make_pair("application/x-troff-me", APPLICATION_X_TROFF_ME));
      mime_types["ms"].push_back(std::make_pair("application/x-troff-ms", APPLICATION_X_TROFF_MS));
      mime_types["ustar"].push_back(std::make_pair("application/x-ustar", APPLICATION_X_USTAR));
      mime_types["src"].push_back(std::make_pair("application/x-wais-source", APPLICATION_X_WAIS_SOURCE));
      mime_types["wp6"].push_back(std::make_pair("application/x-wordperfect6.1", APPLICATION_X_WORDPERFECT6_1));
      mime_types["crt"].push_back(std::make_pair("application/x-x509-ca-cert", APPLICATION_X_X509_CA_CERT));
      mime_types["wmz"].push_back(std::make_pair("application/x-ms-wmz", APPLICATION_X_MS_WMZ));
      mime_types["wmd"].push_back(std::make_pair("application/x-ms-wmd", APPLICATION_X_MS_WMD));
      mime_types["smi"].push_back(std::make_pair("application/smil", APPLICATION_SMIL));
      mime_types["smil"].push_back(std::make_pair("application/smil", APPLICATION_SMIL));
      mime_types["wk"].push_back(std::make_pair("application/x-123", APPLICATION_X_123));
      mime_types["mdf"].push_back(std::make_pair("application/x-access", APPLICATION_X_ACCESS));
      mime_types["mda"].push_back(std::make_pair("application/x-access", APPLICATION_X_ACCESS));
      mime_types["mdb"].push_back(std::make_pair("application/x-access", APPLICATION_X_ACCESS));
      mime_types["mde"].push_back(std::make_pair("application/x-access", APPLICATION_X_ACCESS));
      mime_types["z"].push_back(std::make_pair("application/x-compress", APPLICATION_X_COMPRESS));
      mime_types["Z"].push_back(std::make_pair("application/x-compress", APPLICATION_X_COMPRESS));
      mime_types["js"].push_back(std::make_pair("application/x-javascript", APPLICATION_X_JAVASCRIPT));
      mime_types["wks"].push_back(std::make_pair("application/x-lotus-123", APPLICATION_X_LOTUS_123));
      mime_types["mcd"].push_back(std::make_pair("application/x-mathcad", APPLICATION_X_MATHCAD));
      mime_types["doc"].push_back(std::make_pair("application/x-msword", APPLICATION_X_MSWORD));
      mime_types["dot"].push_back(std::make_pair("application/x-msword", APPLICATION_X_MSWORD));
      mime_types["wrd"].push_back(std::make_pair("application/x-msword", APPLICATION_X_MSWORD));
      mime_types["rtf"].push_back(std::make_pair("application/x-rtf", APPLICATION_X_RTF));
      mime_types["t"].push_back(std::make_pair("application/x-troff", APPLICATION_X_TROFF));
      mime_types["tr"].push_back(std::make_pair("application/x-troff", APPLICATION_X_TROFF));
      mime_types["roff"].push_back(std::make_pair("application/x-troff", APPLICATION_X_TROFF));
      mime_types["doc"].push_back(std::make_pair("application/x-word", APPLICATION_X_WORD));
      mime_types["dot"].push_back(std::make_pair("application/x-word", APPLICATION_X_WORD));
      mime_types["wp"].push_back(std::make_pair("application/x-wordperfect", APPLICATION_X_WORDPERFECT));
      mime_types["wpd"].push_back(std::make_pair("application/x-wordperfectd", APPLICATION_X_WORDPERFECTD));
      mime_types["bck"].push_back(std::make_pair("application/VMSBACKUP", APPLICATION_VMSBACKUP));
      mime_types["mdf"].push_back(std::make_pair("application/access", APPLICATION_ACCESS));
      mime_types["mda"].push_back(std::make_pair("application/access", APPLICATION_ACCESS));
      mime_types["mdb"].push_back(std::make_pair("application/access", APPLICATION_ACCESS));
      mime_types["mde"].push_back(std::make_pair("application/access", APPLICATION_ACCESS));
      mime_types["bleep"].push_back(std::make_pair("application/bleeper", APPLICATION_BLEEPER));
      mime_types["spl"].push_back(std::make_pair("application/futuresplash", APPLICATION_FUTURESPLASH));
      mime_types["hep"].push_back(std::make_pair("application/hep", APPLICATION_HEP));
      mime_types["imagemap"].push_back(std::make_pair("application/imagemap", APPLICATION_IMAGEMAP));
      mime_types["imap"].push_back(std::make_pair("application/imagemap", APPLICATION_IMAGEMAP));
      mime_types["wks"].push_back(std::make_pair("application/lotus-123", APPLICATION_LOTUS_123));
      mime_types["cpt"].push_back(std::make_pair("application/mac-compactpro", APPLICATION_MAC_COMPACTPRO));
      mime_types["mcd"].push_back(std::make_pair("application/mathcad", APPLICATION_MATHCAD));
      mime_types["qtl"].push_back(std::make_pair("application/quicktimeplayer", APPLICATION_QUICKTIMEPLAYER));
      mime_types["tbk"].push_back(std::make_pair("application/toolbook", APPLICATION_TOOLBOOK));
      mime_types["docm"].push_back(std::make_pair("application/vnd.ms-word.document.macroEnabled.12", APPLICATION_VND_MS_WORD_DOCUMENT_MACROENABLED_12));
      mime_types["dotm"].push_back(std::make_pair("application/vnd.ms-word.template.macroEnabled.12", APPLICATION_VND_MS_WORD_TEMPLATE_MACROENABLED_12));
      mime_types["wp"].push_back(std::make_pair("application/wordperfect", APPLICATION_WORDPERFECT));
      mime_types["wp6"].push_back(std::make_pair("application/wordperfect6.1", APPLICATION_WORDPERFECT6_1));
      mime_types["wpd"].push_back(std::make_pair("application/wordperfectd", APPLICATION_WORDPERFECTD));
      mime_types["amr"].push_back(std::make_pair("audio/AMR", AUDIO_AMR));
      mime_types["awb"].push_back(std::make_pair("audio/AMR-WB", AUDIO_AMR_WB));
      mime_types["evc"].push_back(std::make_pair("audio/EVRC", AUDIO_EVRC));
      mime_types["l16"].push_back(std::make_pair("audio/L16", AUDIO_L16));
      mime_types["smv"].push_back(std::make_pair("audio/SMV", AUDIO_SMV));
      mime_types["au"].push_back(std::make_pair("audio/basic", AUDIO_BASIC));
      mime_types["snd"].push_back(std::make_pair("audio/basic", AUDIO_BASIC));
      mime_types["mp4"].push_back(std::make_pair("audio/mp4", AUDIO_MP4));
      mime_types["mpg4"].push_back(std::make_pair("audio/mp4", AUDIO_MP4));
      mime_types["mpga"].push_back(std::make_pair("audio/mpeg", AUDIO_MPEG));
      mime_types["mp2"].push_back(std::make_pair("audio/mpeg", AUDIO_MPEG));
      mime_types["mp3"].push_back(std::make_pair("audio/mpeg", AUDIO_MPEG));
      mime_types["eol"].push_back(std::make_pair("audio/vnd.digital-winds", AUDIO_VND_DIGITAL_WINDS));
      mime_types["plj"].push_back(std::make_pair("audio/vnd.everad.plj", AUDIO_VND_EVERAD_PLJ));
      mime_types["lvp"].push_back(std::make_pair("audio/vnd.lucent.voice", AUDIO_VND_LUCENT_VOICE));
      mime_types["mxmf"].push_back(std::make_pair("audio/vnd.nokia.mobile-xmf", AUDIO_VND_NOKIA_MOBILE_XMF));
      mime_types["vbk"].push_back(std::make_pair("audio/vnd.nortel.vbk", AUDIO_VND_NORTEL_VBK));
      mime_types["ecelp4800"].push_back(std::make_pair("audio/vnd.nuera.ecelp4800", AUDIO_VND_NUERA_ECELP4800));
      mime_types["ecelp7470"].push_back(std::make_pair("audio/vnd.nuera.ecelp7470", AUDIO_VND_NUERA_ECELP7470));
      mime_types["ecelp9600"].push_back(std::make_pair("audio/vnd.nuera.ecelp9600", AUDIO_VND_NUERA_ECELP9600));
      mime_types["smp3"].push_back(std::make_pair("audio/vnd.sealedmedia.softseal.mpeg", AUDIO_VND_SEALEDMEDIA_SOFTSEAL_MPEG));
      mime_types["smp"].push_back(std::make_pair("audio/vnd.sealedmedia.softseal.mpeg", AUDIO_VND_SEALEDMEDIA_SOFTSEAL_MPEG));
      mime_types["s1m"].push_back(std::make_pair("audio/vnd.sealedmedia.softseal.mpeg", AUDIO_VND_SEALEDMEDIA_SOFTSEAL_MPEG));
      mime_types["aif"].push_back(std::make_pair("audio/x-aiff", AUDIO_X_AIFF));
      mime_types["aifc"].push_back(std::make_pair("audio/x-aiff", AUDIO_X_AIFF));
      mime_types["aiff"].push_back(std::make_pair("audio/x-aiff", AUDIO_X_AIFF));
      mime_types["aac"].push_back(std::make_pair("audio/x-aac", AUDIO_X_AAC));
      mime_types["mid"].push_back(std::make_pair("audio/x-midi", AUDIO_X_MIDI));
      mime_types["midi"].push_back(std::make_pair("audio/x-midi", AUDIO_X_MIDI));
      mime_types["kar"].push_back(std::make_pair("audio/x-midi", AUDIO_X_MIDI));
      mime_types["rm"].push_back(std::make_pair("audio/x-pn-realaudio", AUDIO_X_PN_REALAUDIO));
      mime_types["ram"].push_back(std::make_pair("audio/x-pn-realaudio", AUDIO_X_PN_REALAUDIO));
      mime_types["rpm"].push_back(std::make_pair("audio/x-pn-realaudio-plugin", AUDIO_X_PN_REALAUDIO_PLUGIN));
      mime_types["ra"].push_back(std::make_pair("audio/x-realaudio", AUDIO_X_REALAUDIO));
      mime_types["wav"].push_back(std::make_pair("audio/x-wav", AUDIO_X_WAV));
      mime_types["wma"].push_back(std::make_pair("audio/x-ms-wma", AUDIO_X_MS_WMA));
      mime_types["wax"].push_back(std::make_pair("audio/x-ms-wax", AUDIO_X_MS_WAX));
      mime_types["wmv"].push_back(std::make_pair("audio/x-ms-wmv", AUDIO_X_MS_WMV));
      mime_types["qcp"].push_back(std::make_pair("audio/vnd.qcelp", AUDIO_VND_QCELP));
      mime_types["gif"].push_back(std::make_pair("image/gif", IMAGE_GIF));
      mime_types["ief"].push_back(std::make_pair("image/ief", IMAGE_IEF));
      mime_types["jp2"].push_back(std::make_pair("image/jp2", IMAGE_JP2));
      mime_types["jpg2"].push_back(std::make_pair("image/jp2", IMAGE_JP2));
      mime_types["jpeg"].push_back(std::make_pair("image/jpeg", IMAGE_JPEG));
      mime_types["jpg"].push_back(std::make_pair("image/jpeg", IMAGE_JPEG));
      mime_types["jpe"].push_back(std::make_pair("image/jpeg", IMAGE_JPEG));
      mime_types["jpm"].push_back(std::make_pair("image/jpm", IMAGE_JPM));
      mime_types["jpgm"].push_back(std::make_pair("image/jpm", IMAGE_JPM));
      mime_types["jpx"].push_back(std::make_pair("image/jpx", IMAGE_JPX));
      mime_types["jpf"].push_back(std::make_pair("image/jpx", IMAGE_JPX));
      mime_types["png"].push_back(std::make_pair("image/png", IMAGE_PNG));
      mime_types["svg"].push_back(std::make_pair("image/svg+xml", IMAGE_SVG_XML));
      mime_types["tiff"].push_back(std::make_pair("image/tiff", IMAGE_TIFF));
      mime_types["tif"].push_back(std::make_pair("image/tiff", IMAGE_TIFF));
      mime_types["djvu"].push_back(std::make_pair("image/vnd.djvu", IMAGE_VND_DJVU));
      mime_types["djv"].push_back(std::make_pair("image/vnd.djvu", IMAGE_VND_DJVU));
      mime_types["dwg"].push_back(std::make_pair("image/vnd.dwg", IMAGE_VND_DWG));
      mime_types["pgb"].push_back(std::make_pair("image/vnd.globalgraphics.pgb", IMAGE_VND_GLOBALGRAPHICS_PGB));
      mime_types["ico"].push_back(std::make_pair("image/vnd.microsoft.icon", IMAGE_VND_MICROSOFT_ICON));
      mime_types["mdi"].push_back(std::make_pair("image/vnd.ms-modi", IMAGE_VND_MS_MODI));
      mime_types["bmp"].push_back(std::make_pair("image/x-bmp", IMAGE_X_BMP));
      mime_types["ras"].push_back(std::make_pair("image/x-cmu-raster", IMAGE_X_CMU_RASTER));
      mime_types["psp"].push_back(std::make_pair("image/x-paintshoppro", IMAGE_X_PAINTSHOPPRO));
      mime_types["pspimage"].push_back(std::make_pair("image/x-paintshoppro", IMAGE_X_PAINTSHOPPRO));
      mime_types["pnm"].push_back(std::make_pair("image/x-portable-anymap", IMAGE_X_PORTABLE_ANYMAP));
      mime_types["pbm"].push_back(std::make_pair("image/x-portable-bitmap", IMAGE_X_PORTABLE_BITMAP));
      mime_types["pgm"].push_back(std::make_pair("image/x-portable-graymap", IMAGE_X_PORTABLE_GRAYMAP));
      mime_types["ppm"].push_back(std::make_pair("image/x-portable-pixmap", IMAGE_X_PORTABLE_PIXMAP));
      mime_types["rgb"].push_back(std::make_pair("image/x-rgb", IMAGE_X_RGB));
      mime_types["tga"].push_back(std::make_pair("image/x-targa", IMAGE_X_TARGA));
      mime_types["dgn"].push_back(std::make_pair("image/x-vnd.dgn", IMAGE_X_VND_DGN));
      mime_types["xbm"].push_back(std::make_pair("image/x-xbitmap", IMAGE_X_XBITMAP));
      mime_types["xbm"].push_back(std::make_pair("image/x-xbm", IMAGE_X_XBM));
      mime_types["xpm"].push_back(std::make_pair("image/x-xpixmap", IMAGE_X_XPIXMAP));
      mime_types["xwd"].push_back(std::make_pair("image/x-xwindowdump", IMAGE_X_XWINDOWDUMP));
      mime_types["bmp"].push_back(std::make_pair("image/bmp", IMAGE_BMP));
      mime_types["tga"].push_back(std::make_pair("image/targa", IMAGE_TARGA));
      mime_types["dgn"].push_back(std::make_pair("image/vnd.dgn", IMAGE_VND_DGN));
      mime_types["eml"].push_back(std::make_pair("message/rfc822", MESSAGE_RFC822));
      mime_types["igs"].push_back(std::make_pair("model/iges", MODEL_IGES));
      mime_types["iges"].push_back(std::make_pair("model/iges", MODEL_IGES));
      mime_types["msh"].push_back(std::make_pair("model/mesh", MODEL_MESH));
      mime_types["mesh"].push_back(std::make_pair("model/mesh", MODEL_MESH));
      mime_types["silo"].push_back(std::make_pair("model/mesh", MODEL_MESH));
      mime_types["x_b"].push_back(std::make_pair("model/vnd.parasolid.transmit.binary", MODEL_VND_PARASOLID_TRANSMIT_BINARY));
      mime_types["xmt_bin"].push_back(std::make_pair("model/vnd.parasolid.transmit.binary", MODEL_VND_PARASOLID_TRANSMIT_BINARY));
      mime_types["x_t"].push_back(std::make_pair("model/vnd.parasolid.transmit.text", MODEL_VND_PARASOLID_TRANSMIT_TEXT));
      mime_types["xmt_txt"].push_back(std::make_pair("model/vnd.parasolid.transmit.text", MODEL_VND_PARASOLID_TRANSMIT_TEXT));
      mime_types["wrl"].push_back(std::make_pair("model/vrml", MODEL_VRML));
      mime_types["vrml"].push_back(std::make_pair("model/vrml", MODEL_VRML));
      mime_types["pdb"].push_back(std::make_pair("chemical/x-pdb", CHEMICAL_X_PDB));
      mime_types["xyz"].push_back(std::make_pair("chemical/x-xyz", CHEMICAL_X_XYZ));
      mime_types["dwf"].push_back(std::make_pair("drawing/dwf", DRAWING_DWF));
      mime_types["pdb"].push_back(std::make_pair("x-chemical/x-pdb", X_CHEMICAL_X_PDB));
      mime_types["xyz"].push_back(std::make_pair("x-chemical/x-xyz", X_CHEMICAL_X_XYZ));
      mime_types["ice"].push_back(std::make_pair("x-conference/x-cooltalk", X_CONFERENCE_X_COOLTALK));
      mime_types["dwf"].push_back(std::make_pair("x-drawing/dwf", X_DRAWING_DWF));
      mime_types["wrl"].push_back(std::make_pair("x-world/x-vrml", X_WORLD_X_VRML));
      mime_types["vrml"].push_back(std::make_pair("x-world/x-vrml", X_WORLD_X_VRML));
      mime_types["css"].push_back(std::make_pair("text/css", TEXT_CSS));
      mime_types["csv"].push_back(std::make_pair("text/csv", TEXT_CSV));
      mime_types["html"].push_back(std::make_pair("text/html", TEXT_HTML));
      mime_types["htm"].push_back(std::make_pair("text/html", TEXT_HTML));
      mime_types["htmlx"].push_back(std::make_pair("text/html", TEXT_HTML));
      mime_types["shtml"].push_back(std::make_pair("text/html", TEXT_HTML));
      mime_types["htx"].push_back(std::make_pair("text/html", TEXT_HTML));
      mime_types["txt"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["asc"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["c"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["cc"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["h"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["hh"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["cpp"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["hpp"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["dat"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["hlp"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["rst"].push_back(std::make_pair("text/prs.fallenstein.rst", TEXT_PRS_FALLENSTEIN_RST));
      mime_types["rtx"].push_back(std::make_pair("text/richtext", TEXT_RICHTEXT));
      mime_types["rtf"].push_back(std::make_pair("text/rtf", TEXT_RTF));
      mime_types["sgml"].push_back(std::make_pair("text/sgml", TEXT_SGML));
      mime_types["sgm"].push_back(std::make_pair("text/sgml", TEXT_SGML));
      mime_types["tsv"].push_back(std::make_pair("text/tab-separated-values", TEXT_TAB_SEPARATED_VALUES));
      mime_types["t"].push_back(std::make_pair("text/troff", TEXT_TROFF));
      mime_types["tr"].push_back(std::make_pair("text/troff", TEXT_TROFF));
      mime_types["roff"].push_back(std::make_pair("text/troff", TEXT_TROFF));
      mime_types["troff"].push_back(std::make_pair("text/troff", TEXT_TROFF));
      mime_types["ccc"].push_back(std::make_pair("text/vnd.net2phone.commcenter.command", TEXT_VND_NET2PHONE_COMMCENTER_COMMAND));
      mime_types["jad"].push_back(std::make_pair("text/vnd.sun.j2me.app-descriptor", TEXT_VND_SUN_J2ME_APP_DESCRIPTOR));
      mime_types["si"].push_back(std::make_pair("text/vnd.wap.si", TEXT_VND_WAP_SI));
      mime_types["sl"].push_back(std::make_pair("text/vnd.wap.sl", TEXT_VND_WAP_SL));
      mime_types["wml"].push_back(std::make_pair("text/vnd.wap.wml", TEXT_VND_WAP_WML));
      mime_types["wmls"].push_back(std::make_pair("text/vnd.wap.wmlscript", TEXT_VND_WAP_WMLSCRIPT));
      mime_types["xml"].push_back(std::make_pair("text/xml", TEXT_XML));
      mime_types["dtd"].push_back(std::make_pair("text/xml", TEXT_XML));
      mime_types["htc"].push_back(std::make_pair("text/x-component", TEXT_X_COMPONENT));
      mime_types["etx"].push_back(std::make_pair("text/x-setext", TEXT_X_SETEXT));
      mime_types["vcs"].push_back(std::make_pair("text/x-vcalendar", TEXT_X_VCALENDAR));
      mime_types["vcf"].push_back(std::make_pair("text/x-vcard", TEXT_X_VCARD));
      mime_types["yaml"].push_back(std::make_pair("text/x-yaml", TEXT_X_YAML));
      mime_types["yml"].push_back(std::make_pair("text/x-yaml", TEXT_X_YAML));
      mime_types["rtf"].push_back(std::make_pair("text/x-rtf", TEXT_X_RTF));
      mime_types["csv"].push_back(std::make_pair("text/comma-separated-values", TEXT_COMMA_SEPARATED_VALUES));
      mime_types["doc"].push_back(std::make_pair("text/plain", TEXT_PLAIN));
      mime_types["3gp"].push_back(std::make_pair("video/3gpp", VIDEO_3GPP));
      mime_types["3gpp"].push_back(std::make_pair("video/3gpp", VIDEO_3GPP));
      mime_types["mj2"].push_back(std::make_pair("video/MJ2", VIDEO_MJ2));
      mime_types["mjp2"].push_back(std::make_pair("video/MJ2", VIDEO_MJ2));
      mime_types["mp4"].push_back(std::make_pair("video/mp4", VIDEO_MP4));
      mime_types["mpg4"].push_back(std::make_pair("video/mp4", VIDEO_MP4));
      mime_types["mp2"].push_back(std::make_pair("video/mpeg", VIDEO_MPEG));
      mime_types["mpe"].push_back(std::make_pair("video/mpeg", VIDEO_MPEG));
      mime_types["mp3g"].push_back(std::make_pair("video/mpeg", VIDEO_MPEG));
      mime_types["mpg"].push_back(std::make_pair("video/mpeg", VIDEO_MPEG));
      mime_types["ogv"].push_back(std::make_pair("video/ogg", VIDEO_OGG));
      mime_types["qt"].push_back(std::make_pair("video/quicktime", VIDEO_QUICKTIME));
      mime_types["mov"].push_back(std::make_pair("video/quicktime", VIDEO_QUICKTIME));
      mime_types["mxu"].push_back(std::make_pair("video/vnd.mpegurl", VIDEO_VND_MPEGURL));
      mime_types["m4u"].push_back(std::make_pair("video/vnd.mpegurl", VIDEO_VND_MPEGURL));
      mime_types["nim"].push_back(std::make_pair("video/vnd.nokia.interleaved-multimedia", VIDEO_VND_NOKIA_INTERLEAVED_MULTIMEDIA));
      mime_types["s11"].push_back(std::make_pair("video/vnd.sealed.mpeg1", VIDEO_VND_SEALED_MPEG1));
      mime_types["smpg"].push_back(std::make_pair("video/vnd.sealed.mpeg4", VIDEO_VND_SEALED_MPEG4));
      mime_types["s14"].push_back(std::make_pair("video/vnd.sealed.mpeg4", VIDEO_VND_SEALED_MPEG4));
      mime_types["sswf"].push_back(std::make_pair("video/vnd.sealed.swf", VIDEO_VND_SEALED_SWF));
      mime_types["ssw"].push_back(std::make_pair("video/vnd.sealed.swf", VIDEO_VND_SEALED_SWF));
      mime_types["smov"].push_back(std::make_pair("video/vnd.sealedmedia.softseal.mov", VIDEO_VND_SEALEDMEDIA_SOFTSEAL_MOV));
      mime_types["smo"].push_back(std::make_pair("video/vnd.sealedmedia.softseal.mov", VIDEO_VND_SEALEDMEDIA_SOFTSEAL_MOV));
      mime_types["s1q"].push_back(std::make_pair("video/vnd.sealedmedia.softseal.mov", VIDEO_VND_SEALEDMEDIA_SOFTSEAL_MOV));
      mime_types["viv"].push_back(std::make_pair("video/vnd.vivo", VIDEO_VND_VIVO));
      mime_types["vivo"].push_back(std::make_pair("video/vnd.vivo", VIDEO_VND_VIVO));
      mime_types["dl"].push_back(std::make_pair("video/x-dl", VIDEO_X_DL));
      mime_types["fli"].push_back(std::make_pair("video/x-fli", VIDEO_X_FLI));
      mime_types["flv"].push_back(std::make_pair("video/x-flv", VIDEO_X_FLV));
      mime_types["gl"].push_back(std::make_pair("video/x-gl", VIDEO_X_GL));
      mime_types["asf"].push_back(std::make_pair("video/x-ms-asf", VIDEO_X_MS_ASF));
      mime_types["asx"].push_back(std::make_pair("video/x-ms-asf", VIDEO_X_MS_ASF));
      mime_types["wm"].push_back(std::make_pair("video/x-ms-wm", VIDEO_X_MS_WM));
      mime_types["wmv"].push_back(std::make_pair("video/x-ms-wmv", VIDEO_X_MS_WMV));
      mime_types["wmx"].push_back(std::make_pair("video/x-ms-wmx", VIDEO_X_MS_WMX));
      mime_types["wvx"].push_back(std::make_pair("video/x-ms-wvx", VIDEO_X_MS_WVX));
      mime_types["avi"].push_back(std::make_pair("video/x-msvideo", VIDEO_X_MSVIDEO));
      mime_types["movie"].push_back(std::make_pair("video/x-sgi-movie", VIDEO_X_SGI_MOVIE));
      mime_types["dl"].push_back(std::make_pair("video/dl", VIDEO_DL));
      mime_types["gl"].push_back(std::make_pair("video/gl", VIDEO_GL));

      custom_type = 1000;
    }

    std::vector< std::pair<std::string, mime_type_value> > mime::operator[](std::string extension) {
      return mime_types[extension];
    }

    std::vector< std::pair<std::string, mime_type_value> > mime::types_for_extensions(std::string extension) {
      std::vector< std::pair<std::string, mime_type_value> > result = (*mime::getInstance())[extension];
      if(result.empty()) {
        result = (*mime::getInstance())[DEFAULT_TYPE_EXTENSION];
      }
      return result;
    }

    void mime::add_custom_type(std::string extension, std::string name) {
      mime_types[extension].push_back(std::make_pair(name, (mime_type_value)custom_type++));
    }

    void mime::new_type(std::string extension, std::string name) {
      return mime::getInstance()->add_custom_type(extension, name);
    }

    mime_type::mime_type(std::string ext) : extension(ext) {
      std::vector< std::pair<std::string, mime_type_value> > pairs = mime::types_for_extensions(ext);
      std::vector< std::pair<std::string, mime_type_value> >::iterator it;
      for(it = pairs.begin(); it < pairs.end(); it++) {
        type t;
        t.name = (*it).first;
        t.value = (*it).second;
        types.push_back(t);
      }
    }

    type mime_type::operator[](int i) {
      return types[i];
    }

    bool mime_type::operator==(mime_type mt) {
      std::vector<type>::iterator it;
      for(it = mt.types.begin(); it < mt.types.end(); it++) {
        if(!has(*it)) { return false; }
      }
      return true;
    }

    bool mime_type::operator!=(mime_type mt) {
      return !(*this == mt);
    }

    bool mime_type::has(type t) {
      std::vector<type>::iterator it;
      for(it = types.begin(); it < types.end(); it++) {
        if((*it).value == t.value) { return true; }
      }
      return false;
    }
  }
}

